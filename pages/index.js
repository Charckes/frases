import Head from 'next/head';
import { useState, useEffect } from 'react';
import styles from '@/styles/Home.module.css';

export async function getStaticProps() {
  const res = await fetch('https://charlesmoch.com.br/api/frases/random');
  const data = await res.json();
  return {
    props: {
      frase: {
        autor: data.frase[0].autor,
        texto: data.frase[0].texto
      }
    },
  };
}

export default function Home({ frase }) {
  const [fraseAtual, setFraseAtual] = useState(frase);
  const [carregando, setCarregando] = useState(true);

  useEffect(() => {
    const carregarFrase = async () => {
      const res = await fetch('https://charlesmoch.com.br/api/frases/random');
      const data = await res.json();
      setFraseAtual({
        autor: data.frase[0].autor,
        texto: data.frase[0].texto
      });
      setCarregando(false);
    };
    carregarFrase();
  }, []);

  const atualizarFrase = async () => {
    setCarregando(true);
    const res = await fetch('https://charlesmoch.com.br/api/frases/random');
    const data = await res.json();
    setFraseAtual({
      autor: data.frase[0].autor,
      texto: data.frase[0].texto
    });
    setCarregando(false);
  };

  return (
    <>
      <Head>
        <title>Gerador de frases</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        {carregando ? (
          <p>Carregando...</p>
        ) : (
          <div className={styles.frase}>
            <p className={styles.texto}>"{fraseAtual.texto}"</p>
            <p className={styles.autor}>-{fraseAtual.autor}</p>
            <div className={styles.buttonContainer}>
          <button className={styles.button} onClick={atualizarFrase}>Nova Frase</button>
        </div>
          </div>
          
        )}


      </div>
    </>
  );
}
